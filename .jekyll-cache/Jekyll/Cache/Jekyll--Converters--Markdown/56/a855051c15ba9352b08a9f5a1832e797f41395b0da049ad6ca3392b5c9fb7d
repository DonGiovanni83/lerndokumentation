I",<p>Nach der Theorie zu Prometheus und Grafana in den <a href="/2020/07/24/sys-labs">/sys-labs</a> habe ich diese beiden Technologien in einem ganz einfachen Docker-Setup zusammen gespannt, um diese mal in der Praxis auszuprobieren und damit rum zu spielen.</p>

<p>In einem Container soll eine Prometheus Server Instanz laufen, welche metrics von einem weiteren Container holen soll. Dieser Container ist ein Linux System mit dem Node Exporeter drauf welcher Prometheus daten zur verfügung stellt. Grafana soll in einem dritten Container laufen, wo dann der Prometheus Container als Data Source registriert werden soll, und in einem Dashboard die Daten visualisiert werden sollen.</p>

<p>Im <code class="language-plaintext highlighter-rouge">docker-compose.yml</code> file sieht das Ganze wie folgt aus.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">version</span><span class="pi">:</span> <span class="s1">'</span><span class="s">3'</span>
<span class="na">services</span><span class="pi">:</span>
  <span class="na">prometheus</span><span class="pi">:</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">prom/prometheus:latest</span>
    <span class="na">container_name</span><span class="pi">:</span> <span class="s">prometheus</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">./config:/etc/prometheus/</span>
      <span class="pi">-</span> <span class="s">./data:/prometheus</span>
    <span class="na">command</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s1">'</span><span class="s">--config.file=/etc/prometheus/prometheus.yml'</span>
      <span class="pi">-</span> <span class="s1">'</span><span class="s">--storage.tsdb.path=/home/prometheus'</span>
    <span class="na">expose</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="m">9090</span>
    <span class="na">ports</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">9090:9090</span>
    <span class="na">links</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">target:target</span>


  <span class="na">target</span><span class="pi">:</span>
    <span class="na">container_name</span><span class="pi">:</span> <span class="s">target</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">prom/node-exporter:latest</span>
    <span class="na">expose</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="m">9100</span>
    <span class="na">ports</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">9100:9100</span>

  <span class="na">grafana</span><span class="pi">:</span>
    <span class="na">container_name</span><span class="pi">:</span> <span class="s">grafana</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">grafana/grafana:latest</span>
    <span class="na">links</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">prometheus:prometheus</span>
    <span class="na">restart</span><span class="pi">:</span> <span class="s">unless-stopped</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">./data/grafana:/var/lib/grafana</span>
    <span class="na">user</span><span class="pi">:</span> <span class="s2">"</span><span class="s">root"</span>
    <span class="na">ports</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">3000:3000</span>

</code></pre></div></div>

<p>Mit diesem Setup hatte ich die Möglichkeit verschiedenes auszuprobieren und lernen, wie z.B. das registrieren einer Data Source bei Grafana, das Erstellen oder Importieren eines Dashboards auch in Grafana oder auch Queries über den Prometheus Server auf die Targets abzusetzen.</p>

<p><img src="/assets/images/grafana-dashboard.png" alt="Grafana Dashboard" /></p>

<p>Bei diesem kleinen Experiment war nicht nur spannend zu sehen wie Prometheus und Grafana zusammen funktionieren, sondern auch das Konfigurieren der Docker-Container. Dabei war es wichtig die Container über die benötigten Ports erreichbar für die Anderen zu machen, damit jeder Container seine benötigten Informationen beim jeweiligen Container abholen kann.</p>
:ET