<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Way-Up 2020-2022</title>
    <description>Dokunentation meiner Ausbildung bei Puzzle ITC zum Systemtechniker EFZ.</description>
    <link></link>
    <atom:link href="/lerndokumentation/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 06 Sep 2020 02:13:06 +0000</pubDate>
    <lastBuildDate>Sun, 06 Sep 2020 02:13:06 +0000</lastBuildDate>
    <generator>Jekyll v4.1.1</generator>
    
      <item>
        <title>Ubuntu-20.04 - User-Setup mit Ansible</title>
        <description>
</description>
        <pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate>
        <link>/lerndokumentation/2020/08/21/ubuntu-20.04-user-setup-mit-ansible/</link>
        <guid isPermaLink="true">/lerndokumentation/2020/08/21/ubuntu-20.04-user-setup-mit-ansible/</guid>
        
        <category>Ansible</category>
        
        <category>Ubuntu</category>
        
        <category>Linux</category>
        
        
      </item>
    
      <item>
        <title>Playing with Prometheus</title>
        <description>&lt;p&gt;Nach der Theorie zu Prometheus und Grafana in den &lt;a href=&quot;/2020/07/24/sys-labs&quot;&gt;/sys-labs&lt;/a&gt; habe ich diese beiden Technologien in einem ganz einfachen Docker-Setup zusammen gespannt, um diese mal in der Praxis auszuprobieren und damit rum zu spielen.&lt;/p&gt;

&lt;p&gt;In einem Container soll eine Prometheus Server Instanz laufen, welche metrics von einem weiteren Container holen soll. Dieser Container ist ein Linux System mit dem Node Exporeter drauf welcher Prometheus daten zur verfügung stellt. Grafana soll in einem dritten Container laufen, wo dann der Prometheus Container als Data Source registriert werden soll, und in einem Dashboard die Daten visualisiert werden sollen.&lt;/p&gt;

&lt;p&gt;Im &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; file sieht das Ganze wie folgt aus.&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3'&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;prometheus&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;prom/prometheus:latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;prometheus&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./config:/etc/prometheus/&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./data:/prometheus&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;--config.file=/etc/prometheus/prometheus.yml'&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;--storage.tsdb.path=/home/prometheus'&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;expose&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;9090&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;9090:9090&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;target:target&lt;/span&gt;


  &lt;span class=&quot;na&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;target&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;prom/node-exporter:latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;expose&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;9100&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;9100:9100&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;grafana&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;grafana&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;grafana/grafana:latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;prometheus:prometheus&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unless-stopped&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./data/grafana:/var/lib/grafana&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;root&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3000:3000&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Mit diesem Setup hatte ich die Möglichkeit verschiedenes auszuprobieren und lernen, wie z.B. das registrieren einer Data Source bei Grafana, das Erstellen oder Importieren eines Dashboards auch in Grafana oder auch Queries über den Prometheus Server auf die Targets abzusetzen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/grafana-dashboard.png&quot; alt=&quot;Grafana Dashboard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bei diesem kleinen Experiment war nicht nur spannend zu sehen wie Prometheus und Grafana zusammen funktionieren, sondern auch das Konfigurieren der Docker-Container. Dabei war es wichtig die Container über die benötigten Ports erreichbar für die Anderen zu machen, damit jeder Container seine benötigten Informationen beim jeweiligen Container abholen kann.&lt;/p&gt;
</description>
        <pubDate>Sun, 26 Jul 2020 00:00:00 +0000</pubDate>
        <link>/lerndokumentation/2020/07/26/prometheus/</link>
        <guid isPermaLink="true">/lerndokumentation/2020/07/26/prometheus/</guid>
        
        <category>Prometheus</category>
        
        
      </item>
    
      <item>
        <title>/sys-labs</title>
        <description>&lt;p&gt;Als Einstieg in die Way-Up Lehre bei Puzzle, hat das interne Sys-Team /sys-labs vorbereitet,
welche die Grundlagen der Informatik behandeln und den Lernenden auf grundlegende Tätigkeiten eines Systemadminsitrator bei Puzzle vorberetet. Diese Labs setzen keine Linux-Vorkenntnisse voraus, deshalb waren einige der Lab-Kapitel wiederholung für mich da ich schon Grundkenntnisse über Linux mitbringe. Trotz meiner Vorkenntnissen gab es immer wieder
interessante Ergänzungen und Hintergrund-Infos. Hier einige /sys-labs konnte ich verschiedene Bereiche einlesen und einarbeiten:&lt;/p&gt;

&lt;h2 id=&quot;1_commandline&quot;&gt;1_commandline&lt;/h2&gt;

&lt;p&gt;Das erste Kapitel hat die Grundlagen der Linux Kommandozeile abgedekt. Angefangen mit grundlegenden Befehlen wie sich z.B. in der Ordnerstruktur zu bewegen oder files erstellen und verschieben geht das Kapitel zu etwas aufregenderen Tasks wie z.B. suchen von Files oder Ordner mit Regex ausdrücken.&lt;/p&gt;

&lt;p&gt;Weiter wurden im Kapitel Streams STDOUT STDIN und STDERR angeschaut. Hier war interessant zu sehen wie man die einzelnen Streams unabhängig von einander umleiten kann und auch mittels dem Pipeoperators komplexe Anreihungen von Befehlen bilden kann.&lt;/p&gt;

&lt;h2 id=&quot;2_git&quot;&gt;2_git&lt;/h2&gt;
&lt;p&gt;Das Versionierungstool git wir im Nächsten Kapitel vorgestellt. Dieses Tool war mir nicht unbekannt, da ich bereits&lt;/p&gt;

&lt;h2 id=&quot;3_troubleshooting&quot;&gt;3_troubleshooting&lt;/h2&gt;
&lt;p&gt;Dieses&lt;/p&gt;

&lt;h2 id=&quot;4_ansible&quot;&gt;4_ansible&lt;/h2&gt;
&lt;p&gt;Um verschiedene Infrastrukturen automatisiert aufzusetzen und verwalten, wird bei Puzzle Ansible eingesetzt. Deshalb gehören die ansible-labs auch zur Grundausbildung eines Systemtechniker bei Puzzle. Mehr dazu, was ich in den ansible-labs
lernen konnte in einem weiteren &lt;a href=&quot;/2020/07/31/ansible-labs&quot;&gt;Post&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;5_scripting&quot;&gt;5_scripting&lt;/h2&gt;

&lt;h2 id=&quot;6_networking&quot;&gt;6_networking&lt;/h2&gt;
</description>
        <pubDate>Fri, 24 Jul 2020 00:00:00 +0000</pubDate>
        <link>/lerndokumentation/2020/07/24/sys-labs/</link>
        <guid isPermaLink="true">/lerndokumentation/2020/07/24/sys-labs/</guid>
        
        <category>Linux</category>
        
        
      </item>
    
      <item>
        <title>Ubuntu 20.04 - Bootable USB Key mit preseed</title>
        <description>
</description>
        <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
        <link>/lerndokumentation/2020/02/08/ubuntu-20.04-usb-preseed/</link>
        <guid isPermaLink="true">/lerndokumentation/2020/02/08/ubuntu-20.04-usb-preseed/</guid>
        
        <category>Ubuntu</category>
        
        <category>Linux</category>
        
        
      </item>
    
      <item>
        <title>ansible-labs</title>
        <description>
</description>
        <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
        <link>/lerndokumentation/2020/02/08/ansible-labs/</link>
        <guid isPermaLink="true">/lerndokumentation/2020/02/08/ansible-labs/</guid>
        
        <category>Ansible</category>
        
        
      </item>
    
  </channel>
</rss>
